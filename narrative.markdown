# Tunable Consistency in Riak

Consistency is an overloaded word. In RDBMS's consistency refers to maintaining certain contraints with regard to relational algebra. In distributed shared memory systems, consistency models describe the visibility and ordering of data across nodes. Practically, this means that consistency models explain what happens when latency is high and failures occur. One of the realities of distributed systems is that we must make tradeoffs. If we could offer strong consistency and high availibility, Riak wouldn't exist. To achieve availability guarentees we often use eventual consistency. Many systems already in your infrastructure work in an eventually consistent model. DNS, web caches and asynchronous replication all fit into this category. These examples tend to have temporal knobs for controlling consistency. DNS has TTL. Web cache's have an expiration time. These tools are used when you want to take control of consistency. Instead of walltime, Riak uses logical time to help resolve inconsistencies. Furthermore, Riak lets you tune how many actors in your cluster must participate in storing or retrieving data. Rather than being content with, "this data will should be more than 10 seconds old", we can take command our consistency, down to the request level.